# Nom du workflow
name: CI/CD Angular

# Définir les événements qui déclenchent le workflow
on:
  push:
    branches:
      # Le pipeline s'exécutera à chaque push sur la branche 'main'
      - main

# Définition des jobs (tâches)
jobs:
  # Job 1 : Construction de l'image Docker et publication sur Docker Hub
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Étape pour récupérer le code depuis le dépôt
      - name: Checkout code
        uses: actions/checkout@v2

      # Étape pour configurer l'environnement Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Étape de connexion à Docker Hub en utilisant des secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Étape pour construire et publier l'image
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          # Contexte de construction (répertoire actuel)
          context: .
          # Pousser l'image sur Docker Hub
          push: true
          # Définir les tags pour l'image
          tags: ${{ secrets.DOCKER_USERNAME }}/votre_repo:latest

  # Job 2 : Déploiement sur le serveur de production
  deploy:
    # Ce job dépend du succès du job 'build-and-push'
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # Étape pour le déploiement via SSH
      - name: Deploy to server via SSH
        # Utiliser une action tierce pour la connexion SSH
        uses: appleboy/ssh-action@master
        with:
          # Hôte, utilisateur et clé privée du serveur (stockés en tant que secrets)
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Script à exécuter sur le serveur distant
          script: |
            # Mettre à jour le docker-compose
            docker-compose pull
            # Lancer les conteneurs en tâche de fond (-d)
            docker-compose up -d
            # Nettoyer les anciens conteneurs pour libérer de l'espace
            docker container prune -f
